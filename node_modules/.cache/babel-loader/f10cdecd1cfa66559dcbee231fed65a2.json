{"ast":null,"code":"var _jsxFileName = \"/Users/nguyendat/Documents/init-project/dds_fe_training/src/components/common/AuthenticationRoute.tsx\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { PathConstant } from \"const\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthenticationRoute = _ref => {\n  let {\n    element\n  } = _ref;\n  // Check authentication with the page need to be protected\n  const isChecked = true;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isChecked ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: PathConstant.LOGIN,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 35\n    }, this)\n  }, void 0, false);\n};\n\n_c = AuthenticationRoute;\nexport default AuthenticationRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticationRoute\");","map":{"version":3,"names":["React","Navigate","PathConstant","AuthenticationRoute","element","isChecked","LOGIN"],"sources":["/Users/nguyendat/Documents/init-project/dds_fe_training/src/components/common/AuthenticationRoute.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { PathConstant } from \"const\";\n\nconst AuthenticationRoute = ({ element }: AuthenticationRouteProps): JSX.Element => {\n  // Check authentication with the page need to be protected\n  const isChecked = true;\n\n  return <>{isChecked ? element : <Navigate to={PathConstant.LOGIN} replace />}</>;\n};\n\ntype AuthenticationRouteProps = {\n  element: ReactNode;\n};\n\nexport default AuthenticationRoute;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,OAA7B;;;;AAEA,MAAMC,mBAAmB,GAAG,QAAwD;EAAA,IAAvD;IAAEC;EAAF,CAAuD;EAClF;EACA,MAAMC,SAAS,GAAG,IAAlB;EAEA,oBAAO;IAAA,UAAGA,SAAS,GAAGD,OAAH,gBAAa,QAAC,QAAD;MAAU,EAAE,EAAEF,YAAY,CAACI,KAA3B;MAAkC,OAAO;IAAzC;MAAA;MAAA;MAAA;IAAA;EAAzB,iBAAP;AACD,CALD;;KAAMH,mB;AAWN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}