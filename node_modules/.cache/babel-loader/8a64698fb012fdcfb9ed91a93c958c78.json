{"ast":null,"code":"import { addMinutes, format } from \"date-fns\";\nimport { AppConstant } from \"const\";\n/**\n * Convert timestamp to date format\n *\n * @param {number} timeStamp - TimeStamp\n * @param {string} dateFormat - Date format\n * @param {string} timeFormat - Time format\n *\n * @param {string} dateFormat - Date format\n *\n * @param {string} timeFormat - Time format\n *\n * @return {object} Object of Date and Time\n *\n */\n\nexport const covertTimeStampToDateFormat = function (timeStamp) {\n  let isUTC = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let dateFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : AppConstant.DATE_FORMAT;\n  let timeFormat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : AppConstant.TIME_FORMAT;\n  if (!timeStamp) return {};\n  let date = \"\";\n  let time = \"\";\n  const convertedDate = new Date(timeStamp * 1000);\n\n  if (isUTC) {\n    date = format(addMinutes(convertedDate, convertedDate.getTimezoneOffset()), dateFormat);\n    time = format(addMinutes(convertedDate, convertedDate.getTimezoneOffset()), timeFormat);\n  } else {\n    date = format(convertedDate, dateFormat);\n    time = format(convertedDate, timeFormat);\n  }\n\n  return {\n    date,\n    time\n  };\n};\n/**\n * format timestamp to  --:-- (UTC) - --/--/--\n *\n * @param {number} timeStamp - TimeStamp\n *\n * @return {string} string format\n *\n */\n\nexport const formatTimeStampToUTCString = timeStamp => {\n  if (timeStamp) {\n    const {\n      date,\n      time\n    } = covertTimeStampToDateFormat(timeStamp, true, AppConstant.FULL_DATE_FORMAT);\n    return ` ${time} (UTC) - ${date}`;\n  } else {\n    return \"- - : - - (UTC) - -/- -/- - - -\";\n  }\n};","map":{"version":3,"names":["addMinutes","format","AppConstant","covertTimeStampToDateFormat","timeStamp","isUTC","dateFormat","DATE_FORMAT","timeFormat","TIME_FORMAT","date","time","convertedDate","Date","getTimezoneOffset","formatTimeStampToUTCString","FULL_DATE_FORMAT"],"sources":["/Users/nguyendat/Documents/init-project/dds_fe_training/src/utils/date.utils.ts"],"sourcesContent":["import { addMinutes, format } from \"date-fns\";\nimport { AppConstant } from \"const\";\n\n/**\n * Convert timestamp to date format\n *\n * @param {number} timeStamp - TimeStamp\n * @param {string} dateFormat - Date format\n * @param {string} timeFormat - Time format\n *\n * @param {string} dateFormat - Date format\n *\n * @param {string} timeFormat - Time format\n *\n * @return {object} Object of Date and Time\n *\n */\n\nexport const covertTimeStampToDateFormat = (\n  timeStamp: number,\n  isUTC = true,\n  dateFormat = AppConstant.DATE_FORMAT,\n  timeFormat = AppConstant.TIME_FORMAT,\n) => {\n  if (!timeStamp) return {};\n\n  let date = \"\";\n  let time = \"\";\n  const convertedDate = new Date(timeStamp * 1000);\n\n  if (isUTC) {\n    date = format(addMinutes(convertedDate, convertedDate.getTimezoneOffset()), dateFormat);\n    time = format(addMinutes(convertedDate, convertedDate.getTimezoneOffset()), timeFormat);\n  } else {\n    date = format(convertedDate, dateFormat);\n    time = format(convertedDate, timeFormat);\n  }\n\n  return { date, time };\n};\n\n/**\n * format timestamp to  --:-- (UTC) - --/--/--\n *\n * @param {number} timeStamp - TimeStamp\n *\n * @return {string} string format\n *\n */\nexport const formatTimeStampToUTCString = (timeStamp: number): string => {\n  if (timeStamp) {\n    const { date, time } = covertTimeStampToDateFormat(\n      timeStamp,\n      true,\n      AppConstant.FULL_DATE_FORMAT,\n    );\n    return ` ${time} (UTC) - ${date}`;\n  } else {\n    return \"- - : - - (UTC) - -/- -/- - - -\";\n  }\n};\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,UAAnC;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,2BAA2B,GAAG,UACzCC,SADyC,EAKtC;EAAA,IAHHC,KAGG,uEAHK,IAGL;EAAA,IAFHC,UAEG,uEAFUJ,WAAW,CAACK,WAEtB;EAAA,IADHC,UACG,uEADUN,WAAW,CAACO,WACtB;EACH,IAAI,CAACL,SAAL,EAAgB,OAAO,EAAP;EAEhB,IAAIM,IAAI,GAAG,EAAX;EACA,IAAIC,IAAI,GAAG,EAAX;EACA,MAAMC,aAAa,GAAG,IAAIC,IAAJ,CAAST,SAAS,GAAG,IAArB,CAAtB;;EAEA,IAAIC,KAAJ,EAAW;IACTK,IAAI,GAAGT,MAAM,CAACD,UAAU,CAACY,aAAD,EAAgBA,aAAa,CAACE,iBAAd,EAAhB,CAAX,EAA+DR,UAA/D,CAAb;IACAK,IAAI,GAAGV,MAAM,CAACD,UAAU,CAACY,aAAD,EAAgBA,aAAa,CAACE,iBAAd,EAAhB,CAAX,EAA+DN,UAA/D,CAAb;EACD,CAHD,MAGO;IACLE,IAAI,GAAGT,MAAM,CAACW,aAAD,EAAgBN,UAAhB,CAAb;IACAK,IAAI,GAAGV,MAAM,CAACW,aAAD,EAAgBJ,UAAhB,CAAb;EACD;;EAED,OAAO;IAAEE,IAAF;IAAQC;EAAR,CAAP;AACD,CArBM;AAuBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMI,0BAA0B,GAAIX,SAAD,IAA+B;EACvE,IAAIA,SAAJ,EAAe;IACb,MAAM;MAAEM,IAAF;MAAQC;IAAR,IAAiBR,2BAA2B,CAChDC,SADgD,EAEhD,IAFgD,EAGhDF,WAAW,CAACc,gBAHoC,CAAlD;IAKA,OAAQ,IAAGL,IAAK,YAAWD,IAAK,EAAhC;EACD,CAPD,MAOO;IACL,OAAO,iCAAP;EACD;AACF,CAXM"},"metadata":{},"sourceType":"module"}